http {

    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    gzip_disable "MSIE [1-6]\.";

    client_max_body_size 10m;
    server {
     listen 80 default_server;
    }
    server {
        server_name docs.ampnet.io;

        location /project/ {
            proxy_pass http://167.99.142.146:8123/docs/index.html;
        }

        location /user/ {
            proxy_pass http://167.99.142.146:8125/docs/index.html;
        }

        location /wallet/ {
            proxy_pass http://167.99.142.146:8128/docs/index.html;
        }
    }
    server {
        server_name ampnet.io;
        root /var/www/ampnet-landing;
        include /etc/nginx/mime.types;
        location / {

        }
        listen 443 ssl;
        ssl_certificate /etc/letsencrypt/live/api.ampnet.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.ampnet.io/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    }
    server {
        listen 80;
        server_name www.ampnet.io;
        return 301 http://ampnet.io;
    }
    server {
        server_name blog.ampnet.io;
        location / {
            proxy_pass http://127.0.0.1:2368;
        }
        listen 443 ssl;
        ssl_certificate /etc/letsencrypt/live/api.ampnet.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.ampnet.io/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    }
    server {
        server_name api.ampnet.io;
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
        location / {
            proxy_pass http://167.99.142.146:8123/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        location /user/ {
            proxy_pass http://167.99.142.146:8125/;
        }
        location /link/ {
            proxy_pass http://167.99.142.146:8126/;
        }
        location /user_api/identyum {
            return 301 $scheme://api.ampnet.io/user/identyum/;
        }
        location /wallet/ {
            proxy_pass http://167.99.142.146:8128/;
        }
        listen 443 ssl;
        ssl_certificate /etc/letsencrypt/live/api.ampnet.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.ampnet.io/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    }
    server {
        server_name genervest-api.ampnet.io;
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        location / {
            proxy_pass http://104.248.38.66:8123/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        location /user/ {
            proxy_pass http://104.248.38.66:8125/;
        }
        location /link/ {
            proxy_pass http://104.248.38.66:8126/;
        }
        location /user_api/identyum {
            return 301 $scheme://api.ampnet.io/user/identyum/;
        }
        location /wallet/ {
            proxy_pass http://104.248.38.66:8128/;
        }
    }

    server {
        server_name genervest.ampnet.io;
        root /var/www/genervest-frontend;
        location / {
            try_files $uri @prerender;
        }
        listen 443 ssl;
        ssl_certificate /etc/letsencrypt/live/api.ampnet.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.ampnet.io/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        add_header X-Prerender-Token XubZiMj6AKC6R08PEYPp;

        location @prerender {
            proxy_set_header X-Prerender-Token YOUR_TOKEN;

            set $prerender 0;
            if ($http_user_agent ~* "googlebot|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest\/0\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp") {
                set $prerender 1;
            }
            if ($args ~ "_escaped_fragment_") {
                set $prerender 1;
            }
            if ($http_user_agent ~ "Prerender") {
                set $prerender 0;
            }
            if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
                set $prerender 0;
            }

            #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
            resolver 8.8.8.8;

            if ($prerender = 1) {

                #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
                set $prerender "service.prerender.io";
                rewrite .* /$scheme://$host$request_uri? break;
                proxy_pass http://$prerender;
            }
            if ($prerender = 0) {
                rewrite .* /index.html break;
            }
        }
    }
    server {
        server_name demo.ampnet.io;
        root /var/www/ampnet-frontend;
        location / {
            try_files $uri @prerender;
        }
        listen 443 ssl;
        ssl_certificate /etc/letsencrypt/live/api.ampnet.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.ampnet.io/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        add_header X-Prerender-Token XubZiMj6AKC6R08PEYPp;

        location @prerender {
            proxy_set_header X-Prerender-Token YOUR_TOKEN;

            set $prerender 0;
            if ($http_user_agent ~* "googlebot|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest\/0\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp") {
                set $prerender 1;
            }
            if ($args ~ "_escaped_fragment_") {
                set $prerender 1;
            }
            if ($http_user_agent ~ "Prerender") {
                set $prerender 0;
            }
            if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
                set $prerender 0;
            }

            #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
            resolver 8.8.8.8;

            if ($prerender = 1) {

                #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
                set $prerender "service.prerender.io";
                rewrite .* /$scheme://$host$request_uri? break;
                proxy_pass http://$prerender;
            }
            if ($prerender = 0) {
                rewrite .* /index.html break;
            }
        }
    }
}
events {}